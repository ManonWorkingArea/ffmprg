#!/usr/bin/env node

/**
 * Thai Font Checker for FFmpeg
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö...\n');

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
const recommendedFonts = {
  // TLWG Fonts (‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô)
  tlwg: [
    '/usr/share/fonts/truetype/tlwg/Garuda.ttf',
    '/usr/share/fonts/truetype/tlwg/Kinnari.ttf',
    '/usr/share/fonts/truetype/tlwg/Waree.ttf',
    '/usr/share/fonts/truetype/tlwg/Loma.ttf',
    '/usr/share/fonts/truetype/tlwg/Purisa.ttf',
    '/usr/share/fonts/truetype/tlwg/Sawasdee.ttf',
    '/usr/share/fonts/truetype/tlwg/Umpush.ttf'
  ],
  
  // Google Fonts Thai
  google: [
    '/usr/share/fonts/truetype/thai/Sarabun-Regular.ttf',
    '/usr/share/fonts/truetype/thai/Kanit-Regular.ttf',
    '/usr/share/fonts/truetype/thai/Prompt-Regular.ttf',
    '/usr/share/fonts/truetype/thai/Mitr-Regular.ttf',
    '/usr/share/fonts/truetype/thai/Chakra-Petch-Regular.ttf',
    '/usr/share/fonts/truetype/thai/IBM-Plex-Sans-Thai-Regular.ttf'
  ],
  
  // Noto Fonts
  noto: [
    '/usr/share/fonts/truetype/noto/NotoSansThai-Regular.ttf',
    '/usr/share/fonts/truetype/noto/NotoSerifThai-Regular.ttf',
    '/usr/share/fonts/truetype/noto/NotoLoopedThai-Regular.ttf'
  ],
  
  // System Fonts
  system: [
    '/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf',
    '/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf',
    '/usr/share/fonts/truetype/ubuntu/Ubuntu-Regular.ttf'
  ]
};

let foundFonts = [];
let bestFont = null;

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
Object.keys(recommendedFonts).forEach(category => {
  console.log(`üìÅ ${category.toUpperCase()} Fonts:`);
  
  recommendedFonts[category].forEach(fontPath => {
    if (fs.existsSync(fontPath)) {
      const fontName = path.basename(fontPath);
      console.log(`   ‚úÖ ${fontName} - ${fontPath}`);
      foundFonts.push({ category, path: fontPath, name: fontName });
      
      // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
      if (!bestFont && category === 'tlwg') {
        bestFont = fontPath;
      } else if (!bestFont && category === 'google') {
        bestFont = fontPath;
      } else if (!bestFont && category === 'noto') {
        bestFont = fontPath;
      }
    } else {
      const fontName = path.basename(fontPath);
      console.log(`   ‚ùå ${fontName} - ‡πÑ‡∏°‡πà‡∏û‡∏ö`);
    }
  });
  console.log('');
});

// ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ
console.log('üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
console.log(`   ‡∏û‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${foundFonts.length} ‡πÑ‡∏ü‡∏•‡πå`);

if (foundFonts.length > 0) {
  console.log(`   ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ${bestFont || foundFonts[0].path}`);
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö
  console.log('\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:');
  foundFonts.forEach((font, index) => {
    const star = font.path === bestFont ? '‚≠ê' : '  ';
    console.log(`${star} ${index + 1}. ${font.name} (${font.category})`);
    console.log(`      ${font.path}`);
  });
} else {
  console.log('   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
  console.log('\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:');
  console.log('   sudo apt update');
  console.log('   sudo apt install fonts-tlwg-garuda fonts-tlwg-kinnari fonts-tlwg-waree');
  console.log('   sudo apt install fonts-noto-cjk fonts-noto-cjk-extra');
  console.log('   fc-cache -fv');
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö FFmpeg support
console.log('\nüé¨ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö FFmpeg Font Support:');
try {
  const ffmpegVersion = execSync('ffmpeg -version', { encoding: 'utf8' });
  if (ffmpegVersion.includes('--enable-libfreetype')) {
    console.log('   ‚úÖ FFmpeg ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö text rendering (libfreetype)');
  } else {
    console.log('   ‚ùå FFmpeg ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö text rendering');
  }
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö font loading
  if (bestFont) {
    console.log('\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå:');
    const testCommand = `ffmpeg -f lavfi -i color=black:size=320x240:duration=1 -vf "drawtext=text='‡∏ó‡∏î‡∏™‡∏≠‡∏ö':fontfile='${bestFont}':fontsize=24:fontcolor=white:x=10:y=10" -y test_font.mp4 2>&1`;
    
    try {
      execSync(testCommand, { encoding: 'utf8' });
      if (fs.existsSync('test_font.mp4')) {
        console.log('   ‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ');
        fs.unlinkSync('test_font.mp4'); // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
      }
    } catch (error) {
      console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ');
      console.log('   Error:', error.message.split('\n')[0]);
    }
  }
} catch (error) {
  console.log('   ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö FFmpeg ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå config ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö app
const configData = {
  bestFont: bestFont,
  availableFonts: foundFonts,
  timestamp: new Date().toISOString()
};

fs.writeFileSync('thai-fonts-config.json', JSON.stringify(configData, null, 2));
console.log('\nüíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô thai-fonts-config.json');

console.log('\nüöÄ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô FFmpeg!');
